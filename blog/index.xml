<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on YT Fan&#39;s Blog</title>
    <link>https://ytfanfan.github.io/blog/</link>
    <description>Recent content in Blog on YT Fan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 04 Jan 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ytfanfan.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在 Windows 中安裝 Ubuntu 雙系統</title>
      <link>https://ytfanfan.github.io/blog/%E5%9C%A8-windows-%E4%B8%AD%E5%AE%89%E8%A3%9D-ubuntu-%E9%9B%99%E7%B3%BB%E7%B5%B1/</link>
      <pubDate>Tue, 04 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ytfanfan.github.io/blog/%E5%9C%A8-windows-%E4%B8%AD%E5%AE%89%E8%A3%9D-ubuntu-%E9%9B%99%E7%B3%BB%E7%B5%B1/</guid>
      <description>利用高階 NVIDIA 顯示卡做深度學習可以大幅提身運算效能，然而顯示卡在 windows 系統下會限制其計算能力。因此，這篇文章記錄在 windows 環境中安裝 Ubuntu 雙系統，並更新驅動程式。安裝其他深度學習所需程式則會在下一篇文章中介紹。
安裝步驟 主要分成二部分，首先是重頭戲，分割 windows 硬碟以安裝 Ubuntu 系統，再者是更新 NVIDIA 的驅動程式。
安裝 Ubuntu 雙系統 分割硬碟安裝 Ubuntu 的步驟我是跟著 YouTube 頻道增廣建文做的，他講解得非常仔細，包含前置作業，使用 USB 作為安裝檔案放置區、分割 windows 硬碟、調整 BIOS 的設定，以及正式安裝。影片當中 Ubuntu 的下載點為此連結，而 rufus 則為此連結。在分割硬碟部分，他壓縮了 800 GB，而我則是壓縮 300 GB。我按照他清楚的步驟，一次就安裝完成，且沒有遇到其他問題，建議有相同需求的人可以使用他的教學。神之教學啊！
更新驅動程式 在我原先的計劃當中，安裝完 Ubuntu 接著是安裝 cuda，但是我怎麼樣都裝不上 cuda。經驗不足的我在這一步驟卡關了非常久。仔細檢查 log，以及發現連 nvidia-smi 這個指令都不能使用時，猜測是驅動程式有問題，依照網路上的一些建議，重新安裝 455 的驅動程式後仍然失敗。努力不懈了一段時間，耐不了飢餓的我決定去吃午餐，在吃飽走回辦公室的路上，我邊走邊上網查資料，發現了有人建議使用 Ubuntu 的 Software &amp;amp; Update更新驅動程式。我使用這個方式調整成 470 的驅動程式，問題就迎刃而解了！吃個東西休息一下總是可以帶給我一些幫助，譬如查到更棒的資料 ：) 來一張 nvidia-smi 給的GPU基礎資訊照片以茲紀念</description>
    </item>
    
    <item>
      <title>Temporal difference learning for 2048 game</title>
      <link>https://ytfanfan.github.io/blog/temporal-difference-learning-for-2048-game/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ytfanfan.github.io/blog/temporal-difference-learning-for-2048-game/</guid>
      <description>MathJax.Hub.Config({ tex2jax: { skipTags: [&#39;script&#39;, &#39;noscript&#39;, &#39;style&#39;, &#39;textarea&#39;, &#39;pre&#39;], inlineMath: [[&#39;$$&#39;,&#39;$$&#39;]] &amp;&amp; [[&#39;$&#39;,&#39;$&#39;]] } });   Temporal difference (TD) learning TD($\lambda$) mechanism TD(0) is one of TD learning method which considers only the next state, yet TD(1) is the other kind of TD learning which take the accumulated reward of the following states in the account. TD(1) is the well-known Monte-Carlo method. The difference between them is the target in evaluation function:</description>
    </item>
    
    <item>
      <title>How to install XGBoost in Python for macOS? (2020.02)</title>
      <link>https://ytfanfan.github.io/blog/how-to-install-xgboost-in-python-for-macos/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ytfanfan.github.io/blog/how-to-install-xgboost-in-python-for-macos/</guid>
      <description>Our goal is to install the XGBoost package, which can be compiled with multi-threads. Therefore, we need to install &amp;ldquo;GCC&amp;rdquo; which can compile multithread code. Here are the clear goals:
 Install GCC Install XGBoost package  What have already installed:
 Anacoda Python 3 Homebrew  Installation GCC Obtain gcc from homebrew and check the version of gcc.
$ brew install gcc $ gcc -dumpversion Here, I was suggested by ref 2 to uncomment the following two lines in Makefile.</description>
    </item>
    
    <item>
      <title>Frequentist Statistics vs Bayesian Statistics</title>
      <link>https://ytfanfan.github.io/blog/frequentist-statistics-vs-bayesian-statistics/</link>
      <pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ytfanfan.github.io/blog/frequentist-statistics-vs-bayesian-statistics/</guid>
      <description>Knowledge is accumulated based on numbers and text. Each number represents the outcome of the observed event. Extract the information among numbers and estimated the randomness behind events are methods to gather knowledge. Based on probability, which describes randomness, Statistics is a collection of approaches that provides summaries and inferences. According to different utilizations on probability, two main schools are developed: Frequentist Statistics and Bayesian Statistics.
Before knowing the approaches deepen, we can start from an example in which we can apply Statistics.</description>
    </item>
    
    <item>
      <title>A revised chart for cfd-trading.com</title>
      <link>https://ytfanfan.github.io/blog/visualization-for-cfdtrading/</link>
      <pubDate>Thu, 17 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ytfanfan.github.io/blog/visualization-for-cfdtrading/</guid>
      <description>According to the article &amp;ldquo;top performers over the past 24 hours&amp;rdquo; in website World Markets Snapshot, there are 2 key points mentioned. In the first paragraph, the author summarizes the numbers in the category by averaging. Then, the individual stock performance followed. However, it is hard to tell the key points in the current version chart that is shown above. The 2 key points are:
 Which category performs the best/worst?</description>
    </item>
    
  </channel>
</rss>